NAME
  vm-bhyve - Utility for creating and managing bhyve virtual machines
SYNOPSIS
  vm init
  vm switch list
  vm switch create name
  vm switch vlan name 0-4094
  vm switch add name interface
  vm switch remove name interface
  vm switch destroy name

  vm create [-t template] [-s size] name
  vm install name iso
  vm start name
  vm stop name
  vm console name

  vm startall
  vm stopall

  vm reset name
  vm poweroff name

  vm iso [url]
DESCRIPTION
  vm-bhyve is a utility to simplify managing bhyve virtual machines.

  To ease network configuration, one or more virtual switches can be created
  and assigned physical interfaces and a name. In virtual machine configuration
  only the switch name is required, vm-bhyve automatically creates all necessary 
  network interfaces and bridges.

  All configuration for virtual machines is stored in an easy to edit configuration file
  that is created from a template. Using templates allows you to very quickly create
  new virtual machines that have a specific configuration (cpu, memory, networking, etc).

  Once created, virtual machines can be started and stopped using simple commands. All
  reboot and shutdown events from within the guest are handled as expected.
BASIC SETUP
  Once vm-bhyve is installed, create the directory which will store your virtual machine data.
  This directory is referred to as $VM_DIR in this man page.

  Add the following to /etc/rc.conf to enable vm-bhyve and set default configuration:

    vm_enable="YES"
    vm_dir="/your/vm/dir"
    vm_list=""
    vm_delay="5"

  The $vm_list variable is a space separated list that specifies the guests to start on boot.
  $vm_delay is the delay in seconds between starting guests. 5 is a safe minimum for this
  value, although you may want to increase this if you have many disk-intensive guests
  and want to make sure each one has a chance to boot before the next starts.

  Now run the vm init command to complete the basic setup and initialise any needed modules

  Copy the sample templates into the $VM_DIR/.templates folder. You can modify the sample
  templates as required or create your own.

  At this point you are ready to start creating virtual switches and guests.
ZFS
  A quick note about usage on ZFS.

  If your $vm_dir is also a ZFS dataset, vm-bhyve will automatically create a new dataset
  when creating a virtual machine. For example, consider the following configuration:

    $vm_dir="/pool/vm"

  If "pool/vm" is a ZFS dataset, a new dataset called "pool/vm/guest-name" will be created
  when a guest is created.
SUBCOMMANDS

  init

    This should be run once on each boot. This is normally done on boot by the included
    rc.d script. Its main functions are as follows:

      o  Load all necessary kernel modules if not already loaded
      o  Set tap devices to come up automatically when opened
      o  Create any virtual switches that have already been configured

  switch list

    List virtual switches. This reads all configured virtual switches from the $VM_DIR/.config/switch
    file and displays them. If the virtual switches are loaded, it also displays the bridge interface
    that has been assigned to each one.

  switch create name

    Create a new virtual switch. The name must be supplied and may only contain letters and dashes,
    although the dash character cannot be at the start or end of the name.

    When a new switch is created, the configuration file is updated and the new bridge is created

  switch vlan name 0-4094

    Assign a VLAN number to a virtual switch.

    When adding an interface to a virtual switch that has a VLAN number assigned, vm-bhyve will
    automatically create a new vlan interface. The vlan interface will be given the relevant VLAN
    tag and parent interface. It is the vlan interface which is then added to the switch.

    Adding a VLAN number to a switch that already contains interfaces will cause all interfaces
    to be removed and re-configured.

    To remove VLAN configuration from a virtual switch, specify a VLAN number of 0.

  switch add name interface

    Add the specified interface to the named virtual switch.

    As with all switch configuration, this is persistent and will be recreated on boot. On a normal
    virtual switch, this causes the specified interface to be added to the bridge for the relevent
    switch. If a VLAN is configured on the switch, a new vlan interface will be created and then vlan
    interface will be added to the bridge. See the vlan description above for more information.

  switch remove name interface

    Removes the specified interface for the virtual switch named.

  switch destroy name

    Completely destroy the named virtual switch and remove it from the persistent configuration file.

  create [-t template] [-s size] name

    Create a new virtual machine. By default, the template defualt.conf is used and a 20GB virtual
    disk image is created. This command will create the virtual machine directory $VM_DIR/$VM_NAME,
    and create the configuration file and disk image within.

    -t template    Use the specified template (without .conf suffix)
    -s size        Disk image size in GB (default is 20GB)

  install name iso

    Start the installation procedure for the named virtual machine, using the specified ISO file.
    The ISO argument should be the filename of the ISO file, which should already exist in the
    $VM_DIR/.iso directory. ISO files can be downloaded into this dircetory using the iso command.

    Once started, the guest loader will be started on the foreground. This allows you to choose the
    Install boot option for guests that require it. Once the loader has completed, you will be returned
    to the shell and bhyve will be running in the background. Use the console command to connect to the
    guest and complete installation.

    After installation, the guest can be rebooted and will boot off its own disk. At this point, the
    installation ISO file is still attached, allowing you to use the installation ISO for any post
    installation tasks. The ISO file will remain attached until the guest is completely shutdown.

  start name

    Start the named virtual machine. The virtual machine will start completely in the background.
    Use the console command to connect to it.

    For each network adapter specified in the configuration file, a tap interface will be created.
    If possible, the tap device will be assigned to the correct bridge for the chosen virtual switch.

  stop name

    Stop a named virtual machine. All tap and nmdm devices will be automatically removed.

  console name

    Connect to the console of the named virtual machine. Without network access, this is the primary
    way of connecting to the virtual machine once it is running.

    This looks for the null modem (nmdm) device associated with the relevenat virtual machine, and
    connects to it with cu. Use ~+Ctrl-D to exit the console.

  startall

    Start all virtual machines configured for auto-start.

    The list of virtual machines to start should be specified in /etc/rc.conf using the $vm_list variable.
    This allows you to use shared storage for virtual machine data, whilst making sure that the correct
    guests start automatically on each host.

    The delay between starting guests can be set using the $vm_delay rc.conf variable, which defaults to 5
    seconds. Too small a delay can cause problems as each guest doesn't have enough time to claim a null 
    modem console device before the next guest starts.

  stopall

    This stops *all* bhyve guests currently running on the system.

  reset name

    Forcefully reset the named virtual machine. This can cause corruption to the guest's file system as
    on real hardware and should only be used if necessary.

  poweroff name

    Forcefully poweroff the named virtual machine. As with reset above, this does not inform the guest
    to shutdown gracefully and should only be used if the guest can not be shut down normally.

  iso [url]

    Without a URL specified, this lists the available ISO images in the $VM_DIR/.iso directory.

    If a URL is specified, it will attempt to fetch the specified file into the iso directory using
    fetch.

SEE ALSO
    bhyve(8), bhyveload(8), tap(4), bridge(4), vlan(4), nmdm(4), cu(1), fetch(1)
BUGS
    Please report bugs/issues/feature requests to the github project at
    https://github.com/churchers/vm-bhyve
AUTHORS
    Matt Churchyard <churchers@gmail.com>
